HKEY_LOCAL_MACHINE\SOFTWARE\FEI\tadbrickbox\Configurations\<tadconfig_name>\TAD-bbox
    TadXtDesuBrick
        TadXtDesuBrickMgr
            Desu
                 Advanced Voltage Tests
                 Advanced Voltage Tests [delete]
                 HiVac Advanced Voltage Test
                 HiVac Advanced Voltage Test [delete]
                 HiVac Advanced Voltage Test
                    Description = HiVac Advanced Voltage Test
                    DlgProgId = TADUIAUTOTESTDLG.TADUIAutoTestDlgCtrl.1
                    HelpBaseId = REG_DWORD 0x40030400
                    IsMonitorTest = false
                    Labels = Description\\t Results
                    OrderPriority = REG_DWORD 0x00000040
                    Type = SCUTadTestManager
                    ODPrimitiveProviders
                        DESU
                            Type = default
                            AppName = DESU
                            SCU_ID = DESU
                    TestExecutor
                        Type = SequentialTestExecutor
                        TestIndex_1 = "AppVersion"
                        TestIndex_2 = "FirmwareVersion"
                        TestIndex_3 = "Hivac"
                        TestIndex_4 = "StoreProtection"
                        TestIndex_5 = ProtectionChange(ProtectCMD, 0x0)
                        TestIndex_6 = ShowInfo("-4kV tests", "===========")
                        TestIndex_7 = REG_MULTI_SZ "ChangeOutput(OutputCMD, 0x06, ""Output OFF"")" \
                            "ValueSetterWithPause(Set4kV, 500, """")" \
                            "VoltageTest(Get4kV, 500, ""4kV"")" \
                            "ValueSetterWithPause(Set4kV, 2000, """")" \
                            "VoltageTest(Get4kV, 2000, ""4kV"")" \
                            "ValueSetterWithPause(Set4kV, 4000, """")" \
                            "VoltageTest(Get4kV, 4000, ""4kV"")"
                        TestIndex_8 = "CommandSwitch(HvGenCommand, 0x01)"
                        ; SUP_800V_OFF (3)
                        TestIndex_9 = "SupTadSwitch(Sup800250Command, 0x03)"
                        ; SUP_250V_OFF (5)
                        TestIndex_10 = "SupTadSwitch(Sup800250Command, 0x05)"
                        ; SUP_TAD_ON (6)
                        TestIndex_11 = "SupTadSwitch(Sup800250Command, 0x06)"
                        ; SUP_TAD_REGULATE (7)
                        TestIndex_12 = REG_MULTI_SZ "ValueSetterWithPause(Regulate800V, 50, ""Regulate 50V"")" \
                            "SupTadSwitch(Sup800250Command, 0x07)" \
                            "TadVoltageTest(Adc800Val, 50, ""250V"")" \
                            "ValueSetterWithPause(Regulate800V, 250, ""Regulate 250V"")" \
                            "SupTadSwitch(Sup800250Command, 0x07)" \
                            "TadVoltageTest(Adc800Val, 250, ""250V"")"
                        TestIndex_13 = "SupTadSwitch(Sup800250Command, 0x08)"
                        TestIndex_14 = REG_MULTI_SZ "ChangeOutput(OutputCMD, 0x01, ""Output ON"")" \
                            "ValueSetterWithPause(Set4kV, 500, """")" \
                            "VoltageTest(Get4kV, 500, ""4kV"")" \
                            "ValueSetterWithPause(Set4kV, 2000, """")" \
                            "VoltageTest(Get4kV, 2000, ""4kV"")" \
                            "ValueSetterWithPause(Set4kV, 4000, """")" \
                            "VoltageTest(Get4kV, 4000, ""4kV"")"
                        TestIndex_15 = ShowInfo("10kV tests", "===========")
                        TestIndex_16 = "Rel10Switch(Rel10kVCommand, 0x01)"
                        TestIndex_17 = REG_MULTI_SZ "ValueSetterWithPause(Set4kV, 500, """")" \
                            "VoltageTest10kv(Get10kV, 500, ""10kV"")" \
                            "ValueSetterWithPause(Set4kV, 2000, """")" \
                            "VoltageTest10kv(Get10kV, 2500, ""10kV"")" \
                            "ValueSetterWithPause(Set4kV, 4000, """")" \
                            "VoltageTest(Get10kV, 4000, ""10kV"")"
                        TestIndex_18 = "CommandSwitch(Sup90VCommand, 0)"
                        TestIndex_19 = Test90V_OFF
                        TestIndex_20 = "CommandSwitch(Sup90VCommand, 1)"
                        TestIndex_21 = Test90V_ON
                        TestIndex_22 = "CommandSwitch(SupLvdfeCommand, 0)"
                        TestIndex_23 = Test9V_OFF
                        TestIndex_24 = "CommandSwitch(SupLvdfeCommand, 1)"
                        TestIndex_25 = Test9V_ON
						TestIndex_26 = ProtectionChange(ProtectCMD, OrgProtection)
                        Sup90VCommand
                            ODPrimitivePath = DESU/Sup90VCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        SupLvdfeCommand
                            ODPrimitivePath = DESU/SupLvdfeCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        OrgProtection
                            OwnerTestName = StoreProtection
                            Type = ExternalTestVariable
                            VariableName = OrgProtection
                        HvGenCommand
                            ODPrimitivePath = DESU/HvGenCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        Rel10kVCommand
                            ODPrimitivePath = DESU/Rel10kVCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        Sup800250Command
                            ODPrimitivePath = DESU/Sup800V250VCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        Regulate800V
                            ODPrimitivePath = DESU/DACSup800VRegulate
                            ODPrimitiveType = DAC
                            SetterExpression = SetterValue
                            Type = ValueSetter
                        Adc800Val
                            Type = ODValueGetter
                            ODPrimitivePath = DESU/Adc800V
                            ODPrimitiveType = ADC
                        ProtectCMD
                            ODPrimitivePath = DESU/ProtectionCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        OutputCMD
                            ODPrimitivePath = DESU/RelStageCommand
                            ODPrimitiveType = Command
                            SetterExpression =HvCommandValue
                            Type = ValueSetter
                        Set4kV
                            ODPrimitivePath = DESU/Dac4kV
                            ODPrimitiveType = DAC
                            SetterExpression = SetterValue
                            Type = ValueSetter
                        Get4kV
                            Type = ODValueGetter
                            ODPrimitivePath = DESU/Adc4kV
                            ODPrimitiveType = ADC
                        Get10kV
                            Type = ODValueGetter
                            ODPrimitivePath = DESU/Adc10kV
                            ODPrimitiveType = ADC
                        
                    Tests
                        StoreProtection
                            Description ="StoreProtection"
                            Type = ValueWriter
                            Expression_1 = REG_MULTI_SZ "OrgProtection = ProtectionState" \
                            "true"
                            Message_1 = Info;"OrgProtection: %1% " << OrgProtection
                            IsTestHidden = true
                            ProtectionState
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/ProtectionState
                                ODPrimitiveType = State
                        Rel10Switch
                            Description =Rel10Switch
                            Type = ValueWriter
                            Message_1 = Info;" "
                            IsTestHidden = true
                            Signature = "(ODSetter ADCCommand, Variable HvCommandValue)"
                        CommandSwitch
                            Description =CommandSwitch
                            Type = ValueWriter
                            Message_1 = Info;" "
                            IsTestHidden = true
                            Signature = "(ODSetter ADCCommand, Variable HvCommandValue)"
                        SupTadSwitch
                            Description = SupTadSwitch
                            Type = ValueWriter
                            Message_1 = Info;" "
                            IsTestHidden = true
                            Signature = "(ODSetter ADCCommand, Variable HvCommandValue)"
                        ValueSetterWithPause
                            Description = "%1% : %2%" << DescriptionString << SetterValue
                            Message_1 = Info;" "
                            Signature = "(ODSetter SetterDAC, Variable SetterValue, Variable DescriptionString)"
                            Type = ValueWriter
                            IsTestHidden = true
                            MinimalDelayinms = 1000
                        Test9V_OFF
                            Description = "Test 9V OFF"
                            Expression_1 = AdcVal == 0
                            Message_1 = Info;"PASSED"
                            Message_2 = Error;"FAILED measured: %1%V" << AdcVal
                            Type = ValueReadout
							MinimalDelayinms = 1000
                            Type = ValueReadout
                            AdcVal
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/AdcFsupTest
                                ODPrimitiveType = ADC
                        Test9V_ON
                            Description = "Test 9V ON"
                            Expression_1 = AdcVal >= 9
                            Message_1 = Info;"PASSED"
                            Message_2 = Error;"FAILED measured: %1%V" << AdcVal
                            Type = ValueReadout
							MinimalDelayinms = 1000
                            Type = ValueReadout
                            AdcVal
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/AdcFsupTest
                                ODPrimitiveType = ADC
                        Test90V_OFF
                            Description = "Test 90V OFF"
                            Expression_1 = Adc90V == 0
                            Message_1 = Info;"PASSED"
                            Message_2 = Error;"FAILED measured: %1%V" << Adc90V
                            Type = ValueReadout
							MinimalDelayinms = 1000
                            Type = ValueReadout
                            Adc90V
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/Adc90V
                                ODPrimitiveType = ADC
                        Test90V_ON
                            Description = "Test 90V ON"
                            Expression_1 = Adc90V >= 91 && Adc90V <= 110
                            Message_1 = Info;"PASSED"
                            Message_2 = Error;"FAILED measured: %1%V" << Adc90V
                            Type = ValueReadout
							MinimalDelayinms = 1000
                            Type = ValueReadout
                            Adc90V
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/Adc90V
                                ODPrimitiveType = ADC
                        TadVoltageTest
                            Description = "%1%: (%2%V)" << DescriptionString << ExpectedV
                            Expression_1 = REG_MULTI_SZ "ExpectPerc = ExpectedV*VPercent" \
                            "abs(ExpectedV-abs(MeasuredV)) <= ExpectPerc"
                            Message_1 = Info;"Test passed measured: %1%V" << MeasuredV
                            Message_2 = Error;"Test Failed Expected %1%V measured %2%V limit %3%" << ExpectedV << MeasuredV << ExpectPerc
                            MinimalDelayinms = 5000
                            Signature = (Variable MeasuredV, Variable ExpectedV, Variable DescriptionString)
                            Type = ValueReadout
                            VPercent
                                Type = Constant
                                Value = 0.05
                        ProtectionChange
                            Description =CommandSwitch
                            Type = ValueWriter
                            Message_1 = Info;" "
                            IsTestHidden = true
                            Signature = "(ODSetter ADCCommand, Variable HvCommandValue)"
                        ChangeOutput
                            Description = "%1%" << DescriptionString
                            Type = ValueWriter
                            Message_1 = Info;" "
                            Signature = "(ODSetter ADCCommand, Variable HvCommandValue, Variable DescriptionString)"
                        ShowInfo
                            Description = "%1%" << DescriptionString
                            Message_1 = Info;"%1%" << InfoString
                            Type = ValueReadout
                            Signature = "(Variable DescriptionString, Variable InfoString)"
                        VoltageTest
                            Description = "%1%: (%2%V)" << DescriptionString << ExpectedV
                            Expression_1 = REG_MULTI_SZ "ExpectPerc = ExpectedV*VPercent" \
                            "abs(ExpectedV-abs(MeasuredV)) <= ExpectPerc"
                            Message_1 = Info;"Expected: %1%,mesured %2%" << ExpectedV << MeasuredV
                            Message_2 = Error;"Test Failed Expected %1%V measured %2%V limit %3%" << ExpectedV << MeasuredV << ExpectPerc
                            MinimalDelayinms = 8000
                            Signature = (Variable MeasuredV, Variable ExpectedV, Variable DescriptionString)
                            Type = ValueReadout
                            VPercent
                                Type = Constant
                                Value = 0.05
                        VoltageTest10kv
                            Description = "%1%: (%2%V)" << DescriptionString << ExpectedV
                            Expression_1 = REG_MULTI_SZ "ExpectPerc = ExpectedV*VPercent" \
                            "MeasureToV = abs(MeasuredV)/2.5" \
                            "abs(ExpectedV-MeasureToV) <= ExpectPerc"
                            Message_1 = Info;"Expected: %1%,mesured %2%" << ExpectedV << MeasuredV
                            Message_2 = Error;"Test Failed Expected %1%V measured %2%V limit %3%" << ExpectedV << MeasuredV << ExpectPerc
                            MinimalDelayinms = 8000
                            Signature = (Variable MeasuredV, Variable ExpectedV, Variable DescriptionString)
                            Type = ValueReadout
                            VPercent
                                Type = Constant
                                Value = 0.05
                        AppVersion
                            Description="Application version"
                            Expression_1 = true
                            Message_1 = Info;"Application version = %1$#x" << AppVersion
                            Type = ValueReadout
                            AppVersion
                                Type = ODValueGetter
                                ODPrimitivePath =DESU/AppVersion
                                ODPrimitiveType =Version
                        FirmwareVersion
                            Description="Firmware version"
                            Expression_1 = true
                            Message_1 = Info;"FirmwareVersion version = %1$#x" << FirmwareVersion
                            Type = ValueReadout
                            FirmwareVersion
                                Type = ODValueGetter
                                ODPrimitivePath =DESU/FirmwareVersion
                                ODPrimitiveType =Version
                        Hivac
                            Description = "Test HiVac"
                            Expression_1 = HvInterlock == HiVacExpected
                            Message_1 = Info;"Pumped to HiVac"
                            Message_2 =Error;"NO HiVac"
                            Type = ValueReadout
                            HvInterlock
                                Type = ODValueGetter
                                ODPrimitivePath = DESU/HvInterlock
                                ODPrimitiveType = State
                            HiVacExpected
                                Type = Constant
                                Value = 0x1
